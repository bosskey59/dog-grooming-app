{"ast":null,"code":"var _jsxFileName = \"/Users/fafi/Desktop/dog-grooming-app/dog-grooming-frontend/src/App.js\";\nimport React from 'react';\nimport { connect } from 'react-redux'; // import {fetchUser} from './actions/fetchUser'\n\nimport UserContainer from './containers/UserContainer';\n\nclass App extends React.Component {\n  componentDidMount() {\n    t;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(UserContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }));\n  }\n\n} // const mapStateToProps = () => //i want to access to this particular part of the store \n\n\nexport default App; //is calling automatically dispatch on the return value of fetch request\n//store.dispatch({type:'FETCH....etc})-the fetch is in fetchgro file","map":{"version":3,"sources":["/Users/fafi/Desktop/dog-grooming-app/dog-grooming-frontend/src/App.js"],"names":["React","connect","UserContainer","App","Component","componentDidMount","t","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,4BAA1B;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAiC;AAE/BC,EAAAA,iBAAiB,GAAG;AACnBC,IAAAA,CAAC;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAX8B,C,CAcjC;;;AAEA,eAAgBJ,GAAhB,C,CACA;AACA","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux'\n// import {fetchUser} from './actions/fetchUser'\nimport UserContainer from './containers/UserContainer'\n\nclass App extends React.Component{\n  \n  componentDidMount() {\n   t\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <UserContainer />\n      </div>\n    );\n  }\n}\n\n// const mapStateToProps = () => //i want to access to this particular part of the store \n\nexport default (App); \n//is calling automatically dispatch on the return value of fetch request\n//store.dispatch({type:'FETCH....etc})-the fetch is in fetchgro file"]},"metadata":{},"sourceType":"module"}