{"ast":null,"code":"//we pass state as first argument, then action object\n//we need default returns something back \n//return.action.payload- this is to check the action is working and if reducer can get updated\nexport default function userReducer(state = {\n  users: []\n}, action) {\n  switch (action.type) {\n    case 'FETCH_USERS':\n      return {\n        users: ac\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/fafi/Desktop/dog-grooming-app/dog-grooming-frontend/src/reducer/userReducer.js"],"names":["userReducer","state","users","action","type","ac"],"mappings":"AAAA;AACA;AACA;AAEA,eAAe,SAASA,WAAT,CAAqBC,KAAK,GAAG;AAACC,EAAAA,KAAK,EAAE;AAAR,CAA7B,EAA0CC,MAA1C,EAAmD;AAE9D,UAAOA,MAAM,CAACC,IAAd;AACC,SAAK,aAAL;AACG,aAAM;AAACF,QAAAA,KAAK,EAAEG;AAAR,OAAN;;AACA;AACA,aAAOJ,KAAP;AAJJ;AAMH","sourcesContent":["//we pass state as first argument, then action object\n//we need default returns something back \n//return.action.payload- this is to check the action is working and if reducer can get updated\n\nexport default function userReducer(state = {users: []}, action ) {\n    \n    switch(action.type){\n     case 'FETCH_USERS':\n        return{users: ac}\n        default:\n        return state  \n    }\n}\n"]},"metadata":{},"sourceType":"module"}