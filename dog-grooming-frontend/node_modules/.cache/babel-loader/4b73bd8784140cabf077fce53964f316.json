{"ast":null,"code":"var _jsxFileName = \"/Users/fafi/Desktop/dog-grooming-app/dog-grooming-frontend/src/App.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchGroomer } from './actions/fetchGroomer';\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.fetchGroomer({\n      type: \"FETCH_GROOMER\"\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"App\");\n  }\n\n} // const mapStateToProps = () => //i want to access to this particular part of the store \n\n\nexport default connect(null, {\n  fetchGroomer\n})(App); //is calling automatically dispatch on the return value of fetch request\n//store.dispatch({type:'FETCH....etc})","map":{"version":3,"sources":["/Users/fafi/Desktop/dog-grooming-app/dog-grooming-frontend/src/App.js"],"names":["React","connect","fetchGroomer","App","Component","componentDidMount","props","type","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,YAAR,QAA2B,wBAA3B;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAiC;AAE/BC,EAAAA,iBAAiB,GAAG;AACnB,SAAKC,KAAL,CAAWJ,YAAX,CAAwB;AAACK,MAAAA,IAAI,EAAE;AAAP,KAAxB;AACA;;AACDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAKD;;AAX8B,C,CAcjC;;;AAEA,eAAeP,OAAO,CAAC,IAAD,EAAO;AAACC,EAAAA;AAAD,CAAP,CAAP,CAA8BC,GAA9B,CAAf,C,CACA;AACA","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux'\nimport {fetchGroomer} from './actions/fetchGroomer'\n\nclass App extends React.Component{\n  \n  componentDidMount() {\n   this.props.fetchGroomer({type: \"FETCH_GROOMER\", })\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        App\n      </div>\n    );\n  }\n}\n\n// const mapStateToProps = () => //i want to access to this particular part of the store \n\nexport default connect(null, {fetchGroomer})(App); \n//is calling automatically dispatch on the return value of fetch request\n//store.dispatch({type:'FETCH....etc})"]},"metadata":{},"sourceType":"module"}