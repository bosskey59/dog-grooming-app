{"ast":null,"code":"var _jsxFileName = \"/Users/fafi/Desktop/dog-grooming-app/dog-grooming-frontend/src/App.js\";\nimport React from 'react';\nimport { connect } from 'react-redux'; // import UserContainer from './containers/UserContainer'\n\nimport { Route } from 'react-router-dom';\nimport { fetchUser } from '../actions/fetchUser';\nimport Users from '../components';\nimport UserAccount from '../components/UserAccount';\nimport UserForm from '../components/UserAccount';\n\nclass App extends React.Component {\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/users/new\",\n      component: UserForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/users/:id\",\n      render: routerProps => React.createElement(UserAccount, Object.assign({}, routerProps, {\n        users: this.props.users,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/users\",\n      render: routerProps => React.createElement(Users, Object.assign({}, routerProps, {\n        users: this.props.users,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App; //is calling automatically dispatch on the return value of fetch request\n//store.dispatch({type:'FETCH....etc})-the fetch is in fetchgro file\n// const mapStateToProps = () => //i want to access to this particular part of the store","map":{"version":3,"sources":["/Users/fafi/Desktop/dog-grooming-app/dog-grooming-frontend/src/App.js"],"names":["React","connect","Route","fetchUser","Users","UserAccount","UserForm","App","Component","render","routerProps","props","users"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CACA;;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,SAAR,QAAwB,sBAAxB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,QAAP,MAAqB,2BAArB;;AAEA,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAiC;AAE/BC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,YAAZ;AAAyB,MAAA,SAAS,EAAEH,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,YAAZ;AAAyB,MAAA,MAAM,EAAGI,WAAD,IAAiB,oBAAC,WAAD,oBAAiBA,WAAjB;AAA8B,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGM,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,MAAM,EAAGF,WAAD,IAAiB,oBAAC,KAAD,oBAAWA,WAAX;AAAwB,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHN,CADF;AASD;;AAZ8B;;AAgBjC,eAAgBL,GAAhB,C,CACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux'\n// import UserContainer from './containers/UserContainer'\nimport {Route} from 'react-router-dom'\nimport {fetchUser} from '../actions/fetchUser'\nimport Users from '../components'\nimport UserAccount from '../components/UserAccount'\nimport UserForm from '../components/UserAccount'\n\nclass App extends React.Component{\n  \n  render() {\n    return (\n      <Router>\n        <Route path='/users/new' component={UserForm} />\n          <Route path='/users/:id' render={(routerProps) => <UserAccount {...routerProps} users={this.props.users}/>} />\n            <Route path='/users' render={(routerProps) => <Users {...routerProps} users={this.props.users}/>} />\n      </Router>\n      \n \n    );\n  }\n}\n\n\nexport default (App); \n//is calling automatically dispatch on the return value of fetch request\n//store.dispatch({type:'FETCH....etc})-the fetch is in fetchgro file\n// const mapStateToProps = () => //i want to access to this particular part of the store "]},"metadata":{},"sourceType":"module"}